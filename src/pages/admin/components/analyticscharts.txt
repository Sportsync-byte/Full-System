import React, { useEffect, useState } from 'react';
import {
  LineChart,
  Line,
  XAxis,
  YAxis,
  CartesianGrid,
  Tooltip,
  Legend,
  ResponsiveContainer,
} from 'recharts';
import { Box, Typography, CircularProgress } from '@mui/material';

interface AnalyticsChartProps {
  timeRange: string;
}

const AnalyticsChart: React.FC<AnalyticsChartProps> = ({ timeRange }) => {
  const [data, setData] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchChartData();
  }, [timeRange]);

  const fetchChartData = async () => {
    try {
      setLoading(true);
      const response = await fetch(
        `http://localhost:3001/api/admin/analytics/chart?timeRange=${timeRange}`
      );
      const chartData = await response.json();
      setData(chartData);
    } catch (error) {
      console.error('Failed to fetch chart data:', error);
    } finally {
      setLoading(false);
    }
  };

  if (loading) {
    return (
      <Box display="flex" justifyContent="center" alignItems="center" height={400}>
        <CircularProgress />
      </Box>
    );
  }

  return (
    <Box>
      <Typography variant="h6" gutterBottom>
        Viewing Statistics
      </Typography>
      <ResponsiveContainer width="100%" height={400}>
        <LineChart data={data}>
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis dataKey="date" />
          <YAxis />
          <Tooltip />
          <Legend />
          <Line
            type="monotone"
            dataKey="views"
            stroke="#8884d8"
            name="Views"
          />
          <Line
            type="monotone"
            dataKey="activeUsers"
            stroke="#82ca9d"
            name="Active Users"
          />
          <Line
            type="monotone"
            dataKey="streams"
            stroke="#ffc658"
            name="Active Streams"
          />
        </LineChart>
      </ResponsiveContainer>
    </Box>
  );
};

export default AnalyticsChart;