name: Project Setup

on:
  push:
    branches: [ main ]

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Project Structure
      run: |
        # Create directories
        mkdir -p prisma
        mkdir -p server/controllers
        mkdir -p server/middleware
        mkdir -p server/routes
        mkdir -p server/services
        mkdir -p src/components/auth
        mkdir -p src/contexts
        mkdir -p src/services
        mkdir -p src/types

        # Create base files
        touch .env.example
        touch .gitignore
        touch prisma/schema.prisma
        touch server/index.ts
        touch server/controllers/authController.ts
        touch server/middleware/auth.ts
        touch server/routes/auth.ts
        touch server/routes/organization.ts
        touch server/routes/subscription.ts
        touch src/App.tsx
        touch src/index.tsx
        touch src/contexts/AuthContext.tsx
        touch src/components/auth/Login.tsx
        touch src/components/auth/Register.tsx
        touch tsconfig.json
        touch package.json

    - name: Initialize package.json
      run: |
        echo '{
          "name": "scoreboard-system",
          "version": "1.0.0",
          "description": "Sports Scoreboard System",
          "main": "server/index.js",
          "scripts": {
            "start": "node dist/server/index.js",
            "dev": "ts-node-dev server/index.ts",
            "build": "tsc",
            "prisma:generate": "prisma generate",
            "prisma:migrate": "prisma migrate dev"
          },
          "dependencies": {
            "@emotion/react": "^11.11.0",
            "@emotion/styled": "^11.11.0",
            "@mui/material": "^5.13.0",
            "@prisma/client": "^4.14.0",
            "bcryptjs": "^2.4.3",
            "cors": "^2.8.5",
            "express": "^4.18.2",
            "jsonwebtoken": "^9.0.0",
            "react": "^18.2.0",
            "react-dom": "^18.2.0",
            "react-router-dom": "^6.11.1",
            "socket.io": "^4.6.1"
          },
          "devDependencies": {
            "@types/bcryptjs": "^2.4.2",
            "@types/cors": "^2.8.13",
            "@types/express": "^4.17.17",
            "@types/jsonwebtoken": "^9.0.2",
            "@types/node": "^20.1.3",
            "@types/react": "^18.2.6",
            "@types/react-dom": "^18.2.4",
            "prisma": "^4.14.0",
            "ts-node-dev": "^2.0.0",
            "typescript": "^5.0.4"
          }
        }' > package.json

    - name: Create .gitignore
      run: |
        echo "node_modules/
        .env
        dist/
        build/
        .DS_Store
        *.log
        .env.*
        !.env.example" > .gitignore

    - name: Create .env.example
      run: |
        echo "DATABASE_URL=postgresql://username:password@localhost:5432/scoreboard_db
        JWT_SECRET=your-secret-key-here
        PORT=3001" > .env.example

    - name: Commit files
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Initialize project structure" || echo "No changes to commit"
        git push origin main || echo "No changes to push"